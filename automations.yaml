- id: '1600602907087'
  alias: Alarm - Trigger when sensors go on - First (Away)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.entry_door_contact
    - binary_sensor.kitchen_fence_contact
    - binary_sensor.dining_room_fence_contact
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.entrada
    - binary_sensor.cocina
    - binary_sensor.salon
    - binary_sensor.despacho
    - binary_sensor.pasillo
    - binary_sensor.despensa
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.terraza
    - binary_sensor.pir_exterior_entrada_contact
    - binary_sensor.pir_exterior_oeste_contact
    - binary_sensor.pir_exterior_noroeste_contact
    - binary_sensor.pir_exterior_norte_contact
    - binary_sensor.pir_exterior_este_contact
    - binary_sensor.pir_exterior_sureste_contact
    - binary_sensor.pir_exterior_sur_contact
    - binary_sensor.ventana_del_salon
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.entrada_tamper
    - binary_sensor.cocina_tamper
    - binary_sensor.salon_tamper
    - binary_sensor.despacho_tamper
    - binary_sensor.pasillo_tamper
    - binary_sensor.despensa_tamper
    - binary_sensor.caja_de_alarma
    - binary_sensor.ventana_del_salon_tamper
    - binary_sensor.terraza_tamper
    to: open
  condition:
  - condition: state
    entity_id: alarm_control_panel.el_nino_alarm
    state: armed_away
  action:
  - service: notify.group
    data:
      message: La alarma ha detectado algo en el sensor {{trigger.to_state.attributes.friendly_name
        }} a las {{states('sensor.time')}}.
      title: "\U0001F6A8 *¡AVISO DE DETECCIÓN!* \U0001F6A8"
  - service: automation.turn_on
    data: {}
    entity_id: automation.alarm_trigger_when_sensors_go_on_second
  - delay: 00:05
  - repeat:
      until:
      - condition: not
        conditions:
        - condition: state
          entity_id: alarm_control_panel.el_nino_alarm
          state: triggered
      sequence:
      - service: automation.turn_off
        data:
          stop_actions: true
        target:
          entity_id: automation.alarm_trigger_when_sensors_go_on_second
  mode: single
- id: '1600610773486'
  alias: Alarm - To triggered (Home and Away)
  description: Turns on the corresponding siren
  trigger:
  - platform: state
    entity_id: alarm_control_panel.el_nino_alarm
    to: triggered
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.sirena_exterior
  - condition: state
    entity_id: automation.alarm_trigger_when_sensors_go_on_second
    state: 'on'
  - service: switch.turn_on
    data: {}
    entity_id: switch.sirena_interior
  mode: single
- id: '1600612899257'
  alias: Alarm - Trigger when sensors go on - Second (Away)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.entry_door_contact
    - binary_sensor.kitchen_fence_contact
    - binary_sensor.dining_room_fence_contact
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.entrada
    - binary_sensor.cocina
    - binary_sensor.salon
    - binary_sensor.despacho
    - binary_sensor.pasillo
    - binary_sensor.despensa
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.terraza
    - binary_sensor.pir_exterior_entrada_contact
    - binary_sensor.pir_exterior_oeste_contact
    - binary_sensor.pir_exterior_noroeste_contact
    - binary_sensor.pir_exterior_norte_contact
    - binary_sensor.pir_exterior_este_contact
    - binary_sensor.pir_exterior_sureste_contact
    - binary_sensor.pir_exterior_sur_contact
    - binary_sensor.ventana_del_salon_tamper
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.entrada_tamper
    - binary_sensor.cocina_tamper
    - binary_sensor.salon_tamper
    - binary_sensor.despacho_tamper
    - binary_sensor.pasillo_tamper
    - binary_sensor.despensa_tamper
    - binary_sensor.caja_de_alarma
    - binary_sensor.ventana_del_salon_tamper
    - binary_sensor.terraza_tamper
    to: open
  condition:
  - condition: state
    entity_id: alarm_control_panel.el_nino_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    data: {}
    entity_id: alarm_control_panel.el_nino_alarm
  - service: notify.group
    data:
      message: "Se ha detectado un movimiento en el sensor {{trigger.to_state.attributes.friendly_name
        }} a las {{states('sensor.time')}}. \U0001F693"
      title: "\U0001F6A8\U0001F6A8\U0001F6A8 *¡SE HA DISPARADO LA ALARMA!* \U0001F6A8\U0001F6A8\U0001F6A8"
  mode: single
- id: '1600622835627'
  alias: Alarm - When disarmed (Home and Away)
  description: Turn OFF sirens and second alarm automation, notify by telegram and
    turn OFF security cameras.
  trigger:
  - platform: state
    entity_id: alarm_control_panel.el_nino_alarm
    to: disarmed
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.sirena_exterior
      - switch.sirena_interior
      - switch.entrada_ftp
      - switch.comedor_motion_detection
  - service: automation.turn_off
    data:
      stop_actions: true
    target:
      entity_id:
      - automation.alarm_trigger_when_sensors_go_on_second
      - automation.alarm_trigger_when_sensors_go_on_second_home
  - service: notify.group
    data:
      message: Se ha desarmado la alarma a las {{ states('sensor.time')}}.
      title: '*Desconexión de la alarma*'
  - service: esphome.alarm_alarm_beep_beep
    data: {}
  mode: single
- id: '1600642629084'
  alias: Alarm - When armed (Home and Away)
  description: Notify by telegram that the alarm is armed and turn on security cameras.
  trigger:
  - platform: state
    entity_id: alarm_control_panel.el_nino_alarm
    to: armed_away
    id: armed_away
  - platform: state
    entity_id: alarm_control_panel.el_nino_alarm
    to: armed_home
    id: armed_home
  condition: []
  action:
  - service: esphome.alarm_alarm_beep
    data: {}
  - choose:
    - conditions:
      - condition: trigger
        id: armed_away
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.entrada_ftp
          - switch.comedor_motion_detection
        data: {}
      - service: notify.group
        data:
          message: La alarma ha sido activada en el modo _Fuera de Casa_ a las {{states('sensor.time')}}.
          title: '*Conexión de la alarma*'
    default:
    - service: switch.turn_on
      target:
        entity_id:
        - switch.entrada_ftp
      data: {}
    - service: notify.group
      data:
        message: La alarma ha sido activada en el modo _Dentro de Casa_ a las {{states('sensor.time')}}.
        title: '*Conexión de la alarma*'
  mode: single
- id: '1600697180091'
  alias: Alarm - From triggered to armed (Home and Away)
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.el_nino_alarm
    from: triggered
    to: armed_away
  - platform: state
    entity_id: alarm_control_panel.el_nino_alarm
    from: triggered
    to: armed_home
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.sirena_exterior
  - service: switch.turn_off
    data: {}
    entity_id: switch.sirena_interior
  mode: single
- id: '1600964725022'
  alias: Alarm - Notify when unavailable (All)
  description: ''
  trigger:
  - platform: state
    entity_id: switch.interior_sensors_restart
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  condition: []
  action:
  - service: notify.miguel
    data:
      message: The ESP32 linked to interior sensors has disconnected from WiFi at
        {{ states('sensor.date_time') }}
  mode: single
- id: '1623189802627'
  alias: Security - Power off the host system during a long power cut
  description: Four hours after a power cut, disarm the alarm and power off the host.
  trigger:
  - platform: state
    entity_id: binary_sensor.irrigation_status
    to: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id: switch.enchufe_4
    to: unavailable
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id: switch.living_room_plug_switch
    to: unavailable
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition:
  - condition: state
    entity_id: switch.living_room_plug_switch
    state: unavailable
  - condition: state
    entity_id: switch.enchufe_4
    state: unavailable
  - condition: state
    entity_id: binary_sensor.irrigation_status
    state: 'off'
  action:
  - service: notify.group
    data:
      message: Parece que ha habido un corte de luz a las {{ states('sensor.time')
        }}.      Por favor, revísalo antes de que las baterías no puedan aguantar
        la carga del sistema. El sistema se apagará automáticamente en cuatro horas.
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.irrigation_status
      state: 'off'
      for:
        hours: 1
        minutes: 0
        seconds: 0
    - condition: state
      entity_id: switch.enchufe_4
      state: unavailable
    - condition: state
      entity_id: switch.living_room_plug_switch
      state: unavailable
  - service: notify.group
    data:
      message: Por seguridad, el sistema se apagará automáticamente en tres horas.
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.irrigation_status
      state: 'off'
      for:
        hours: 2
        minutes: 0
        seconds: 0
    - condition: state
      entity_id: switch.enchufe_4
      state: unavailable
    - condition: state
      entity_id: switch.living_room_plug_switch
      state: unavailable
  - service: notify.group
    data:
      message: Por seguridad, el sistema se apagará automáticamente en dos horas.
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.irrigation_status
      state: 'off'
      for:
        hours: 3
        minutes: 0
        seconds: 0
    - condition: state
      entity_id: switch.enchufe_4
      state: unavailable
    - condition: state
      entity_id: switch.living_room_plug_switch
      state: unavailable
  - service: notify.group
    data:
      message: Por seguridad, el sistema se apagará automáticamente en una hora.
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.irrigation_status
      state: 'off'
      for:
        hours: 4
        minutes: 0
        seconds: 0
    - condition: state
      entity_id: switch.enchufe_4
      state: unavailable
    - condition: state
      entity_id: switch.living_room_plug_switch
      state: unavailable
  - service: notify.group
    data:
      message: El sistema se apagará para proteger los datos y garantizar la integridad
        de la información.  En caso de que vuelva la luz, será necesario pulsar el
        botón situado en el frontal del Home Assistant si no se inicia automáticamente
        pasados diez minutos. Desarmando la alarma para evitar sorpresas...
      title: '*AVISO IMPORTANTE*'
  - service: alarm_control_panel.alarm_disarm
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: notify.group
    data:
      message: Apagando el sistema...
  - service: hassio.host_shutdown
    data: {}
  mode: single
- id: '1626736527137'
  alias: Energy - Change energy tariff
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.pvpc
    attribute: period
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.pvpc
        state: P3
        attribute: period
      sequence:
      - service: select.select_option
        target:
          entity_id:
          - select.daily_energy_cost
          - select.monthly_energy_cost
          - select.daily_energy
          - select.monthly_energy
        data:
          option: valle
    - conditions:
      - condition: state
        entity_id: sensor.pvpc
        state: P2
        attribute: period
      sequence:
      - service: select.select_option
        target:
          entity_id:
          - select.daily_energy_cost
          - select.monthly_energy_cost
          - select.daily_energy
          - select.monthly_energy
        data:
          option: llana
    - conditions:
      - condition: state
        entity_id: sensor.pvpc
        state: P1
        attribute: period
      sequence:
      - service: select.select_option
        target:
          entity_id:
          - select.daily_energy_cost
          - select.monthly_energy_cost
          - select.daily_energy
          - select.monthly_energy
        data:
          option: punta
    default: []
  mode: single
- id: '1626868061580'
  alias: Energy - Set yesterday energy consumption
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.yesterday_kwh
    data:
      value: '{% set valle = state_attr(''sensor.daily_energy_valle'', ''last_period'')
        | float %} {% set llana = state_attr(''sensor.daily_energy_llana'', ''last_period'')
        | float %} {% set punta = state_attr(''sensor.daily_energy_punta'', ''last_period'')
        | float %}

        {{ (valle + llana + punta ) }}'
  mode: single
- id: '1626948288438'
  alias: Energy - Send data to a file hourly
  description: ''
  trigger:
  - platform: time_pattern
    hours: '*'
    minutes: '59'
    seconds: '50'
  condition: []
  action:
  - service: notify.energy_study_file
    data:
      message: '{{ states(''sensor.date_time'') }},  {{ ''{:,.3f}''.format(float(states(''sensor.hourly_energy''),
        0)) }}, {{ ''{:,.3f}''.format(float(states(''sensor.energy_current_hour''),
        0)) }}, {{ ''{:,.3f}''.format(float(states(''sensor.estadisticas_de_la_ultima_hora_de_la_potencia_instantanea''),
        0) /1000) }}, {{ ''{:,.3f}''.format(float(states(''sensor.power_production_now''),
        0) /1000) }}, {{ states(''utility_meter.daily_energy'') }}, {{ ''{:,.3f}''.format(float(states(''sensor.daily_energy''),
        0)) }}, {{ ''{:,.3f}''.format(float(states(''sensor.weekly_energy''), 0))
        }}, {{ ''{:,.3f}''.format(float(states(''sensor.energy_production_today''),
        0)) }}, {{ states(''sensor.aemet_condition'') }}, {{ ''{:,.2f}''.format(float(states(''sensor.monthly_energy_cost_imp''),
        0)) }}

        '
  mode: single
- id: '1628698660992'
  alias: Alarm - Send files from security cameras (Home and Away)
  description: ''
  trigger:
  - platform: event
    event_type: folder_watcher
    event_data:
      event_type: closed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.folder.startswith(''/media/securityCameras/Entrada'')
          }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.file.endswith(''mp4'') }}'
          sequence:
          - service: telegram_bot.send_video
            data:
              file: '{{ trigger.event.data.path }}'
              target: -472161375
              timeout: 80
        default:
        - service: notify.group
          data:
            message: ¡Se ha detectado un movimiento en la entrada! Adjuntando archivos...
        - service: telegram_bot.send_document
          data:
            file: '{{ trigger.event.data.path }}'
            target: -472161375
            timeout: 10
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.folder.startswith(''/media/securityCameras/Comedor'')
          }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.file.endswith(''mp4'') }}'
          sequence:
          - service: telegram_bot.send_video
            data:
              file: '{{ trigger.event.data.path }}'
              target: -472161375
              timeout: 80
        - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.file.endswith(''jpg'') }}'
          sequence:
          - service: notify.group
            data:
              message: ¡Se ha detectado un movimiento en el comedor! Adjuntando archivos...
          - service: telegram_bot.send_document
            data:
              file: '{{ trigger.event.data.path }}'
              target: -472161375
              timeout: 10
        default: []
    default: []
  mode: parallel
  max: 4
- id: '1631442755979'
  alias: Alarm - Trigger when sensors go on - First (Home)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.entry_door_contact
    - binary_sensor.kitchen_fence_contact
    - binary_sensor.dining_room_fence_contact
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.despensa
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.terraza
    - binary_sensor.pir_exterior_entrada_contact
    - binary_sensor.pir_exterior_oeste_contact
    - binary_sensor.pir_exterior_noroeste_contact
    - binary_sensor.pir_exterior_norte_contact
    - binary_sensor.pir_exterior_este_contact
    - binary_sensor.pir_exterior_sureste_contact
    - binary_sensor.pir_exterior_sur_contact
    - binary_sensor.ventana_del_salon
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.despensa_tamper
    - binary_sensor.caja_de_alarma
    - binary_sensor.ventana_del_salon_tamper
    - binary_sensor.terraza_tamper
    to: open
  condition:
  - condition: state
    entity_id: alarm_control_panel.el_nino_alarm
    state: armed_home
  action:
  - service: notify.group
    data:
      message: La alarma ha detectado algo en el sensor {{trigger.to_state.attributes.friendly_name
        }} a las {{states('sensor.time')}}.
      title: "\U0001F6A8 *¡AVISO DE DETECCIÓN!* \U0001F6A8"
  - service: automation.turn_on
    target:
      entity_id: automation.alarm_trigger_when_sensors_go_on_second_home
    data: {}
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - repeat:
      until:
      - condition: not
        conditions:
        - condition: state
          entity_id: alarm_control_panel.el_nino_alarm
          state: triggered
      sequence:
      - service: automation.turn_off
        data:
          stop_actions: true
        target:
          entity_id: automation.alarm_trigger_when_sensors_go_on_second_home
  mode: single
- id: '1631444535103'
  alias: Alarm - Trigger when sensors go on - Second (Home)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.entry_door_contact
    - binary_sensor.kitchen_fence_contact
    - binary_sensor.dining_room_fence_contact
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.despensa
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.terraza
    - binary_sensor.pir_exterior_entrada_contact
    - binary_sensor.pir_exterior_oeste_contact
    - binary_sensor.pir_exterior_noroeste_contact
    - binary_sensor.pir_exterior_norte_contact
    - binary_sensor.pir_exterior_este_contact
    - binary_sensor.pir_exterior_sureste_contact
    - binary_sensor.pir_exterior_sur_contact
    - binary_sensor.ventana_del_salon
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.despensa_tamper
    - binary_sensor.caja_de_alarma
    - binary_sensor.ventana_del_salon_tamper
    - binary_sensor.terraza_tamper
    to: open
  condition:
  - condition: state
    entity_id: alarm_control_panel.el_nino_alarm
    state: armed_home
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.el_nino_alarm
    data: {}
  - service: notify.group
    data:
      message: "Se ha detectado un movimiento en el sensor {{trigger.to_state.attributes.friendly_name
        }} a las {{states('sensor.time')}}. \U0001F693"
      title: "\U0001F6A8\U0001F6A8\U0001F6A8 *¡SE HA DISPARADO LA ALARMA!* \U0001F6A8\U0001F6A8\U0001F6A8"
  mode: single
- id: '1632435586236'
  alias: Security - Reboot Home Assistant if router reboots
  description: Reboots Home Assistant due to some DHCP problems.
  trigger:
  - platform: state
    entity_id: binary_sensor.irrigation_status
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id: binary_sensor.swimming_pool_status
    for:
      hours: 0
      minutes: 10
      seconds: 0
    to: 'off'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.router
      state: 'off'
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.swimming_pool_status
        state: 'off'
      - condition: state
        entity_id: binary_sensor.irrigation_status
        state: 'off'
  action:
  - service: hassio.host_reboot
    data: {}
  mode: single
- id: '1638287372751'
  alias: Update PVPC manually
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: time_pattern
    minutes: '00'
    seconds: '30'
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: homeassistant.update_entity
    target:
      entity_id: sensor.pvpc
  mode: single
- id: '1639942219645'
  alias: Wireguard - Reset connection when down
  description: If the connection with any wireguard server is lost (for example, due
    to an IP change), restart the wireguard addon to establish the connection again.
  trigger:
  - platform: state
    entity_id: binary_sensor.router_madrid
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id: binary_sensor.router_murcia
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.router
    state: 'on'
  action:
  - repeat:
      while:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.router
          state: 'on'
          for:
            hours: 0
            minutes: 4
            seconds: 0
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.router_madrid
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 30
          - condition: state
            entity_id: binary_sensor.router_murcia
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 30
      sequence:
      - service: hassio.addon_restart
        data:
          addon: fd24a922_wireguard_client
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
  mode: single
- id: '1643745839320'
  alias: Lau - Send payment reminders
  description: ''
  trigger:
  - platform: time
    at: '12:15'
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ now().day == 1 }}'
    then:
    - service: input_boolean.turn_off
      target:
        entity_id:
        - input_boolean.lau_maria_has_paid
        - input_boolean.lau_patricia_has_paid
        - input_boolean.lau_angela_has_paid
      data: {}
  - if:
    - condition: template
      value_template: '{{ (now().month % 3) == 0 and now().day == 5 }}'
    then:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.lau_robleda_seguros_has_paid
      data: {}
  - if:
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ (now().day < 7) and ( is_state(''input_boolean.lau_maria_has_paid'',
          ''off'') or is_state(''input_boolean.lau_patricia_has_paid'', ''off'') or
          is_state(''input_boolean.lau_angela_has_paid'', ''off'') )  }}'
      - condition: template
        value_template: '{{ (now().month % 3 == 0) and (now().day >= 5) and (now().day
          < 15) and (is_state(''input_boolean.lau_robleda_seguros_has_paid'', ''off''))
          }}'
    then:
    - service: notify.lau
      data:
        message: 'Los que no han pagado todavía este mes son:'
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
        milliseconds: 0
    - if:
      - condition: template
        value_template: '{{ (now().day < 7) and is_state(''input_boolean.lau_patricia_has_paid'',
          ''off'') }}'
      then:
      - service: telegram_bot.send_message
        data:
          message: Patricia Madrid
          target: 303515965
          inline_keyboard:
          - Pagado!:/patri_has_paid, Morosa!:/patri_has_not_paid
    - if:
      - condition: template
        value_template: '{{ (now().day < 7) and is_state(''input_boolean.lau_maria_has_paid'',
          ''off'') }}'
      then:
      - service: telegram_bot.send_message
        data:
          message: María García Burgos 144
          target: 303515965
          inline_keyboard:
          - Pagado!:/maria_has_paid, Morosa!:/maria_has_not_paid
    - if:
      - condition: template
        value_template: '{{ (now().day < 7) and is_state(''input_boolean.lau_angela_has_paid'',
          ''off'') }}'
      then:
      - service: telegram_bot.send_message
        data:
          message: Ángela Burgos 48
          target: 303515965
          inline_keyboard:
          - Pagado!:/angela_has_paid, Morosa!:/angela_has_not_paid
    - if:
      - condition: template
        value_template: '{{ (now().month % 3 == 0) and (now().day >= 5) and (now().day
          < 15) and (is_state(''input_boolean.lau_robleda_seguros_has_paid'', ''off'')
          ) }}'
      then:
      - service: telegram_bot.send_message
        data:
          message: Robleda Seguros Burgos 48 (2 plazas y trimestral)
          target: 303515965
          inline_keyboard:
          - Pagado!:/robleda_has_paid, Moroso!:/robleda_has_not_paid
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
  - if:
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ (now().day == 7) and ( is_state(''input_boolean.lau_maria_has_paid'',
          ''off'') or is_state(''input_boolean.lau_patricia_has_paid'', ''off'') )
          }} or is_state(''input_boolean.lau_angela_has_paid'', ''off'') )  }}'
      - condition: template
        value_template: '{{ (now().month % 3 == 0) and (now().day == 15) and (is_state(''input_boolean.lau_robleda_seguros_has_paid'',
          ''off'') ) }}'
    then:
    - service: notify.lau
      data:
        message: ¡Morosos a la vista!
        title: "\U0001F6A8 ALERTA \U0001F6A8"
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
        milliseconds: 0
    - if:
      - condition: template
        value_template: '{{ (now().day == 7) and is_state(''input_boolean.lau_patricia_has_paid'',
          ''off'') }}'
      then:
      - service: notify.lau
        data:
          message: Patricia Madrid
    - if:
      - condition: template
        value_template: '{{ (now().day == 7) and is_state(''input_boolean.lau_maria_has_paid'',
          ''off'') }}'
      then:
      - service: notify.lau
        data:
          message: María García Burgos 144
    - if:
      - condition: template
        value_template: '{{ (now().day == 7) and is_state(''input_boolean.lau_angela_has_paid'',
          ''off'') }}'
      then:
      - service: notify.lau
        data:
          message: Ángela Burgos 48
    - if:
      - condition: template
        value_template: '{{ (now().month % 3 == 0) and (now().day == 15) and (is_state(''input_boolean.lau_robleda_seguros_has_paid'',
          ''off'') ) }}'
      then:
      - service: notify.lau
        data:
          message: Robleda Seguros Burgos 48 (2 plazas y trimestral)
  mode: single
- id: '1643907231416'
  alias: Lau - Changes input boolean values
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /patri_has_paid
    id: patri_has_paid
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /patri_has_not_paid
    id: patri_has_not_paid
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /maria_has_paid
    id: maria_has_paid
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /maria_has_not_paid
    id: maria_has_not_paid
  - platform: event
    event_type: telegram_callback
    id: robleda_has_paid
    event_data:
      command: /robleda_has_paid
  - platform: event
    event_type: telegram_callback
    id: robleda_has_not_paid
    event_data:
      command: /robleda_has_not_paid
  - platform: event
    event_type: telegram_callback
    id: angela_has_paid
    event_data:
      command: /angela_has_paid
  - platform: event
    event_type: telegram_callback
    id: angela_has_not_paid
    event_data:
      command: /angela_has_not_paid
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: patri_has_paid
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.lau_patricia_has_paid
      - service: notify.lau
        data:
          message: Pa' la saca!
          title: "*¡Patricia ha pagado!* \U0001F389"
    - conditions:
      - condition: trigger
        id: patri_has_not_paid
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.lau_patricia_has_paid
      - service: notify.lau
        data:
          message: Pues no eh, resulta que Patri no ha pagado :(
    - conditions:
      - condition: trigger
        id: maria_has_paid
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.lau_maria_has_paid
      - service: notify.lau
        data:
          message: Se viene viajesito!!!
          title: "*¡María ha pagado!* \U0001F389"
    - conditions:
      - condition: trigger
        id: maria_has_not_paid
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.lau_maria_has_paid
      - service: notify.lau
        data:
          message: Pues na', no hay viajesito por culpa de María :(
    - conditions:
      - condition: trigger
        id: robleda_has_paid
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.lau_robleda_seguros_has_paid
      - service: notify.lau
        data:
          title: "*¡Robleda Seguros ha pagado!* \U0001F389"
          message: Cómo les gusta tener su coche seguro, jejejeje
    - conditions:
      - condition: trigger
        id: robleda_has_not_paid
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.lau_robleda_seguros_has_paid
      - service: notify.lau
        data:
          message: Últimamente no nos aseguramos ni un buen cliente...
    - conditions:
      - condition: trigger
        id: angela_has_paid
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.lau_angela_has_paid
      - service: notify.lau
        data:
          title: "*¡Ángela ha pagado!* \U0001F389"
          message: ¿Me vas a regalar un cochesito?
    - conditions:
      - condition: trigger
        id: angela_has_not_paid
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.lau_angela_has_paid
      - service: notify.lau
        data:
          message: Joe con la people, ni coche ni na. Esto es una ruina
    default: []
  mode: single
- id: '1649799780278'
  alias: Notify - Flood sensor
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.pantry_flood_sensor_water_leak
    to: 'on'
  condition: []
  action:
  - service: notify.group
    data:
      message: El sensor de la despensa ha detectado agua a las {{ states('sensor.time')
        }}.
      title: '*¡AVISO IMPORTANTE!*'
  mode: single
- id: '1650113623089'
  alias: Security - Set random times for lights
  description: ''
  trigger:
  - platform: time
    at: '13:30:00'
  condition: []
  action:
  - service: scheduler.edit
    data:
      entity_id: switch.schedule_habitacion_de_invitados_encendido
      timeslots:
        start: sunset+00:{{ "{:02}".format(range(0, 20)|random|int) }}
        actions:
        - service: light.turn_on
          entity_id: light.guest_room_plug_switch
  - service: scheduler.edit
    data:
      entity_id: switch.schedule_habitacion_de_invitados_apagar
      timeslots:
        start: 01:{{ "{:02}".format(range(0, 59)|random|int) }}
        actions:
        - service: light.turn_off
          entity_id: light.guest_room_plug_switch
  variables:
    first_event_on: '{{ (state_attr(''sun.sun'', ''next_setting'') | as_datetime |
      as_timestamp) + ((range(-10, 20)|random|int) * 60) }}'
    second_event_off: '{{ first_event_on + (range(30, 70)|random|int) * 60 }}'
    second_event_on: '{{ second_event_off - (range(1, 4)|random|int) * 60 }}'
    third_event_off: '{{ second_event_on + (range(40, 90)|random|int) * 60 }}'
    third_event_on: '{{ third_event_off - (range(1, 4)|random|int) * 60 }}'
    fourth_event_off: '{{ third_event_on + (range(30, 60)|random|int) * 60 }}'
    fourth_event_on: '{{ fourth_event_off - (range(1, 4)|random|int) * 60 }}'
    fifth_event_off: '{{ (state_attr(''sun.sun'', ''next_rising'') | as_datetime |
      as_timestamp) + ((range(-20, 10)|random|int) * 60) }}'
  mode: single
- id: '1650498048252'
  alias: Security - Controls for random lights
  description: ''
  trigger:
  - platform: time
    at: sensor.sunset_offset
    id: sunset
  - platform: time
    at: sensor.sunrise_offset
    id: sunrise
  - platform: homeassistant
    event: start
    id: ha_start
  - platform: state
    entity_id: input_boolean.dining_mode
    to: 'on'
    id: dining_mode_on
  - platform: state
    entity_id: input_boolean.dining_mode
    to: 'off'
    id: dining_mode_off
  - platform: state
    entity_id: input_boolean.modo_tv
    to: 'on'
    id: modo_tv_on
  - platform: state
    entity_id: input_boolean.modo_tv
    to: 'off'
    id: modo_tv_off
  - platform: time
    at: 02:00:00
    id: two_am
  - platform: state
    entity_id:
    - media_player.lg_webos_tv_um7000pla
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: lg_tv_off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - condition: state
        entity_id: input_boolean.dining_mode
        state: 'off'
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.security_lights_turn_on_lights
    - conditions:
      - condition: trigger
        id: sunrise
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.security_lights
    - conditions:
      - condition: trigger
        id: ha_start
      sequence:
      - condition: template
        value_template: '{{  (utcnow().strftime(''%T'')) > (states(''sensor.sunset_offset'')
          | as_datetime).strftime(''%T'') or (utcnow().strftime(''%T'')) < (states(''sensor.sunrise_offset'')
          | as_datetime).strftime(''%T'') }}

          '
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.security_lights
      - service: script.turn_off
        data: {}
        target:
          entity_id:
          - script.security_lights_corridor
          - script.security_lights_dining_room
          - script.security_lights_living_room_sofa
          - script.security_lights_living_room_window
      - condition: state
        entity_id: input_boolean.dining_mode
        state: 'off'
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.security_lights_turn_on_lights
    - conditions:
      - condition: trigger
        id: dining_mode_on
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.security_lights
      - service: script.turn_off
        data: {}
        target:
          entity_id:
          - script.security_lights_living_room_window
          - script.security_lights_living_room_sofa
          - script.security_lights_dining_room
          - script.security_lights_corridor
    - conditions:
      - condition: trigger
        id: dining_mode_off
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.security_lights_turn_on_lights
    - conditions:
      - condition: trigger
        id: modo_tv_on
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.living_room_sofa_plug
      - if:
        - condition: state
          entity_id: script.security_lights_living_room_sofa
          state: 'on'
        then:
        - service: script.turn_off
          data: {}
          target:
            entity_id: script.security_lights_living_room_sofa
        - service: script.turn_on
          data: {}
          target:
            entity_id: script.security_lights_turn_on_lights
    - conditions:
      - condition: trigger
        id: modo_tv_off
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.living_room_sofa_plug
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id: two_am
        - condition: state
          entity_id: input_boolean.dining_mode
          state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.dining_mode
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id: lg_tv_off
        - condition: state
          entity_id: input_boolean.modo_tv
          state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.modo_tv
    default: []
  mode: queued
  max: 2
