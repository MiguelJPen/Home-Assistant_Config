substitutions:
  name: heater
  upper_name: Heater
  heater_id: heater_switch
  heater_upper_id: Calefacci√≥n

  # GPIO Pins
  heater_pin: "33"

  # Temperature get from HA
  temperature_id: house_temp
  temperature_entity_id: sensor.house_temperature

packages:
  device_base: !include common/device_base.heater.yaml
  ethernet: !include common/wt32-eth01.config.yaml
  basic_control: !include common/basic_control.yaml

esphome:
  name: heater

switch:
  - platform: gpio
    id: ${heater_id}
    internal: True
    pin:
      number: ${heater_pin}

binary_sensor:
  - platform: template
    name: ${heater_upper_id}
    lambda: return id(${heater_id}).state;

sensor:
  - platform: homeassistant
    id: ${temperature_id}
    entity_id: ${temperature_entity_id}

climate:
  - platform: thermostat
    name: "Termostato"
    sensor: ${temperature_id}
    min_heating_off_time: 300s
    min_heating_run_time: 300s
    min_idle_time: 240s
    heat_deadband: 0.2
    heat_overrun: 0.3
    heat_action:
      - switch.turn_on: ${heater_id}
    idle_action:
      - switch.turn_off: ${heater_id}
    startup_delay: true
    preset:
      - name: home
        default_target_temperature_low: 16
        mode: HEAT
      - name: eco
        default_target_temperature_low: 15
        mode: HEAT
      - name: away
        default_target_temperature_low: 12
        mode: HEAT