security_lights_dining_room:
  alias: Security lights - Dining room
  sequence:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.dining_room_plug_switch
  - delay:
      minutes: '{{ range(30, 80) | random | int }}'
  - condition: state
    entity_id: binary_sensor.end_random_lights
    state: 'off'
  - service: script.turn_on
    data: {}
    target:
      entity_id: "{% set data = namespace(scripts=[]) %} \n{% set data.scripts = data.scripts
        + [\"script.security_lights_living_room_window\"] %}\n\n{% if is_state('input_boolean.modo_tv',
        'off') %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_living_room_sofa\"]
        %}\n{% endif %}\n\n{% if is_state('binary_sensor.end_random_lights', 'off')
        %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_corridor\"]
        %}\n{% endif %}\n{{ data.scripts | random }}\n"
  - delay:
      seconds: '{{ range(20, 200) | random | int }}'
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.dining_room_plug_switch
  mode: single
  icon: mdi:robber
security_lights_corridor:
  alias: Security lights - Corridor
  sequence:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.corridor_plug
  - delay:
      minutes: '{{ range(30, 80) | random | int }}'
  - service: script.turn_on
    data: {}
    target:
      entity_id: "{% set data = namespace(scripts=[]) %} \n{% set data.scripts = data.scripts
        + [\"script.security_lights_living_room_window\"] %}\n{% set data.scripts
        = data.scripts + [\"script.security_lights_dining_room\"] %}\n{% if is_state('input_boolean.modo_tv',
        'off') %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_living_room_sofa\"]
        %}\n{% endif %}\n{{ data.scripts | random }}\n"
  - delay:
      seconds: '{{ range(20, 200) | random | int }}'
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.corridor_plug
  mode: single
  icon: mdi:robber
security_lights_living_room_window:
  alias: Security lights - Living room window
  sequence:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.living_room_window_plug_switch
  - delay:
      minutes: '{{ range(30, 80) | random | int }}'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.end_random_lights
        state: 'on'
      sequence:
      - wait_for_trigger:
        - platform: time
          at: sensor.sunrise_offset
        timeout: '10:00'
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.living_room_window_plug_switch
    default:
    - service: script.turn_on
      data: {}
      target:
        entity_id: "{% set data = namespace(scripts=[]) %} \n{% set data.scripts =
          data.scripts + [\"script.security_lights_dining_room\"] %}\n\n{% if is_state('input_boolean.modo_tv',
          'off') %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_living_room_sofa\"]
          %}\n{% endif %}\n\n{% if is_state('binary_sensor.end_random_lights', 'off')
          %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_corridor\"]
          %}\n{% endif %}\n{{ data.scripts | random }}\n"
    - delay:
        seconds: '{{ range(20, 200) | random | int }}'
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.living_room_window_plug_switch
  mode: single
  icon: mdi:robber
security_lights_living_room_sofa:
  alias: Security lights - Living room sofa
  sequence:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.living_room_sofa_plug
  - delay:
      minutes: '{{ range(30, 80) | random | int }}'
  - condition: state
    entity_id: binary_sensor.end_random_lights
    state: 'off'
  - service: script.turn_on
    data: {}
    target:
      entity_id: "{% set data = namespace(scripts=[]) %} \n{% set data.scripts = data.scripts
        + [\"script.security_lights_living_room_window\"] %}\n{% set data.scripts
        = data.scripts + [\"script.security_lights_dining_room\"] %}\n{% if is_state('binary_sensor.end_random_lights',
        'off') %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_corridor\"]
        %}\n{% endif %}\n{{ data.scripts | random }}\n"
  - delay:
      seconds: '{{ range(20, 200) | random | int }}'
  - condition: state
    entity_id: input_boolean.modo_tv
    state: 'off'
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.living_room_sofa_plug
  mode: single
  icon: mdi:robber
security_lights_turn_on_lights:
  alias: Security lights - Turn on lights
  sequence:
  - service: script.turn_on
    data: {}
    target:
      entity_id: "{% set data = namespace(scripts=[]) %} {% set data.scripts = data.scripts
        + [\"script.security_lights_dining_room\"] %} {% set data.scripts = data.scripts
        + [\"script.security_lights_living_room_window\"] %}\n{% if is_state('input_boolean.modo_tv',
        'off') %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_living_room_sofa\"]
        %}\n{% endif %}\n{% if is_state('binary_sensor.end_random_lights', 'off')
        %}\n  {% set data.scripts = data.scripts + [\"script.security_lights_corridor\"]
        %}\n{% endif %}\n{{ (data.scripts | random) }}\n"
  mode: single
guest_room_security_ligths_bathroom_event:
  alias: Security lights - Guest room bathroom event
  sequence:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.guest_bathroom
  - delay:
      minutes: '{{ range(7, 25) | random | int }}'
      seconds: '{{ range(0, 60) | random | int }}'
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.guest_bathroom
  mode: single
  icon: mdi:robber
arrive_home:
  alias: Action - Arrive Home
  sequence:
  - service: button.press
    data: {}
    target:
      entity_id: button.path_gate
  - delay:
      hours: 0
      minutes: 0
      seconds: 8
      milliseconds: 0
  - service: cover.toggle
    data: {}
    target:
      entity_id: cover.main_gate
  - if:
    - condition: sun
      before: sunrise
      after: sunset
      before_offset: -00:20:00
      after_offset: 00:20:00
    then:
    - service: light.turn_on
      data: {}
      target:
        entity_id:
        - light.luz_del_garaje
        - light.front_porch
    - delay:
        hours: 0
        minutes: 2
        seconds: 30
        milliseconds: 0
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.luz_del_garaje
        - light.front_porch
  mode: single
  icon: mdi:human-greeting-variant
